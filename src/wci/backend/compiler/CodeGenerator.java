package wci.backend.compiler;

import wci.backend.Backend;
import wci.intermediate.*;
import wci.message.*;

import static wci.message.MessageType.*;


public class CodeGenerator extends Backend {

	public CodeGenerator() {
		// TODO Auto-generated constructor stub
	}

	/**
	 * Process the intermediate code and the symbol table generated by the 
	 * parser to generate machine-language instructions.
	 * @param iCode the intermediate code.
	 * @param symTabStack the symbol table stack.
	 * @throws Exception if an error occurred.
	 */
	public void process(ICode iCode, SymTabStack symTabStack) 
		throws Exception 
	{
		long startTime = System.currentTimeMillis();
		float elapsedTime = ((System.currentTimeMillis()-startTime)/1000f);
		int instructionCount = 0;
		
		//Send the compiler summary message
		sendMessage(new Message(COMPILER_SUMMARY, new Number[] {instructionCount, elapsedTime}));

	}

}
